1) Clone/Download the LogExtractAndMask repository into your local repository.
2) Insert your log file into LogExtractAndMask/Files/log.txt
3) Write a suitable script for your log file that captures all the required variables into LogExtractAndMask/Files/script.txt (Example log and script files can be found in LogExtractAndMask/Files/Examples)
4) Execute the LogAnalyzer.exe found in LogExtractAndMask/DataAnalyzer/LogAnalyzer/cmake-build-debug
5) The json node tree structure will be printed in LogExtractAndMask/Files/resultJSON.json
6) Create a databse named "sunstitutiondb" and add the given tables using the csv files provided in LogExtractAndMask/substitutiondbtables
7) Enter the following details into LogExtractAndMask/Files/maskingScript.txt file to mask sensitive information.
	    i)Enter your MySQL database connection string as follows - $DB_CONNECTION_STRING.SetDbString(hostname_username_password_databasename_port) (Example -> localhost_admin_admin_substitutiondb_0)
	   ii)Enter the variable names of the fields that require masking as follows - {$FIRST_NAME,$LAST_NAME,$TELEPHONE_NUMBER,$ADDRESS}:=LIST
	  iii)You can input one or all 16 available variable names into the above statement.
	   iv)The fields available are  FIRST_NAME, LAST_NAME, FULL_NAME, DATE, MONTH, YEAR, HOUR, MINUTE, SECONDS, TELEPHONE_NUMBER, ADDRESS, POSTAL_CODE, INTEGER, PRICE, NIC, EMAIL.
	    v)The variable names of the variables that you require to be masked in the script file should be same as the variable names provided in iv) above.
	   vi)Add range of replacement values for integer and price maskinbg as follows if required ($INTEGER.SetLValue(10000),$INTEGER.SetRValue(20000),$PRICE.SetLValue(10000),$PRICE.SetRValue(20000)).

6) Execute the MaskTool.exe found in LogExtractAndMask/LDAL/cmake-build-debug
7) The masked log file will be created in LogExtractAndMask/Files/maskedLog.txt


